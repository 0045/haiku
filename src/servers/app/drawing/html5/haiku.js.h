static const char haiku_js[] =
  "/*\n"
  " * Copyright 2012, Haiku, Inc.\n"
  " * Distributed under the terms of the MIT License.\n"
  " *\n"
  " * Authors:\n"
  " *		Fran√ßois Revol <revol@free.fr>\n"
  " *\n"
  " * Loosely inspired by\n"
  " * http://git.gnome.org/browse/gtk+/tree/gdk/broadway/broadway.js?h=broadway\n"
  " */\n"
  "\n"
  "var logDiv;\n"
  "var desktop;	// the canvas\n"
  "\n"
  "function dbg(str)\n"
  "{\n"
  "	var div = document.createElement(\"div\");\n"
  "	div.className = \"haiku_online_debug\";\n"
  "	div.appendChild(document.createTextNode(str));\n"
  "	logDiv.appendChild(div);\n"
  "}\n"
  "\n"
  "function err(str)\n"
  "{\n"
  "	var div = document.createElement(\"div\");\n"
  "	div.className = \"haiku_online_error\";\n"
  "	div.appendChild(document.createTextNode(str));\n"
  "	logDiv.appendChild(div);\n"
  "}\n"
  "\n"
  "function createXHR()\n"
  "{\n"
  "	try {\n"
  "		return new XMLHttpRequest();\n"
  "	} catch(e) {\n"
  "		err(\"Failed to create XHR: \" + e);\n"
  "	}\n"
  "	return null;\n"
  "}\n"
  "\n"
  "function onMessage(message)\n"
  "{\n"
  "	dbg(\"onMessage: \");\n"
  "window.popup(\"plop\");\n"
  "	dbg(message.target.responseText);\n"
  "}\n"
  "\n"
  "function initDesktop()\n"
  "{\n"
  "	dbg(\"initDesktop()\");\n"
  "	desktop = document.getElementById(\"desktop\");\n"
  "	var xhr = createXHR();\n"
  "	if (xhr) {\n"
  "		if (typeof xhr.multipart != \"undefined\")\n"
  "			xhr.multipart = true;\n"
  "		else {\n"
  "			err(\"XHR has no multipart field!\");\n"
  "			return;\n"
  "		}\n"
  "		if (typeof xhr.async != \"undefined\")\n"
  "			xhr.async = true;\n"
  "		else {\n"
  "			dbg(\"XHR has no async field!\");\n"
  "		}\n"
  "		dbg(\"multipart: \" + xhr.multipart);\n"
  "		xhr.open(\"GET\", \"http://127.0.0.1:8080/output\", true);\n"
  "		//xhr.onload = onMessage;\n"
  "		xhr.onreadystatechange = function() {\n"
  "			dbg(\"readystate changed: \" + xhr.readyState);\n"
  "			if (xhr.readyState != 4)\n"
  "				return;\n"
  "			dbg(\"status: \" + xhr.status);\n"
  "			dbg(\"resonseType: \" + xhr.responseType);\n"
  "			dbg(\"response: \" + xhr.responseText);\n"
  "			dbg(\"headers: \" + xhr.getAllResponseHeaders());\n"
  "\n"
  "		}\n"
  "		//xhr.responseType = \"arraybuffer\";\n"
  "		//dbg(\"xhr.onload:\" + xhr.onload);\n"
  "		//dbg(\"xhr.send:\" + xhr.send);\n"
  "		xhr.overrideMimeType(\"multipart/x-mixed-replace;boundary=x\");\n"
  "		xhr.send(null);\n"
  "		//dbg(\"headers: \" + xhr.getAllResponseHeaders());\n"
  "	} else\n"
  "		err(\"No XHR\");\n"
  "	dbg(\"done\");\n"
  "}\n"
  "\n"
  "\n"
  "function onPageLoad() {\n"
  "	logDiv = document.getElementById(\"log\");\n"
  "	dbg(\"onPageLoad()\");\n"
  "	initDesktop();\n"
  "}\n"
  "\n"
  "function onPageUnload() {\n"
  "	dbg(\"onPageUnload()\");\n"
  "}\n"
  "\n"
  "\n";
