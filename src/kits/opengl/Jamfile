SubDir HAIKU_TOP src kits opengl ;

SetSubDirSupportedPlatformsBeOSCompatible ;

UsePrivateHeaders interface ;
UsePrivateSystemHeaders ;

local sources =
	GLView.cpp
	GLDispatcher.cpp
	GLRenderer.cpp
	GLRendererRoster.cpp
	;


if $(TARGET_PLATFORM) != haiku {
	UseHeaders [ FDirName $(HAIKU_TOP) headers os opengl ] : true ;
		# We need our public GL headers also when not compiling for Haiku.
}


SubDirSysHdrs $(HAIKU_MESA_HEADERS) ;
Includes [ FGristFiles $(sources) ] : $(HAIKU_MESA_HEADERS_DEPENDENCY) ;

UseHeaders [ FDirName $(HAIKU_MESA_DIR) include ] ;
UseHeaders [ FDirName $(HAIKU_MESA_DIR) src mesa ] ;
UseHeaders [ FDirName $(HAIKU_MESA_DIR) src mesa main ] ;
UseHeaders [ FDirName $(HAIKU_MESA_DIR) src mapi ] ;
UseHeaders [ FDirName $(HAIKU_MESA_DIR) src mapi glapi ] ;


LINKFLAGS on libGL.so = [ on libGL.so return $(LINKFLAGS) ]
	-Xlinker --strip-debug -Xlinker --whole-archive -Xlinker -zmuldefs ;

SharedLibrary libGL.so : $(sources) :

	# Mesa libraries (from Mesa optional package):
	$(HAIKU_MESA_LIBS)

	# External libraries:
	be
	game			# BWindowScreen needed by BGLScreen stub class
	$(TARGET_LIBSTDC++)
;
