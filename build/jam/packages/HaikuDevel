local haikuDevelPackage = haiku_devel.hpkg ;
HaikuPackage $(haikuDevelPackage) ;

local arch = $(TARGET_ARCH) ;
local developDirTokens = develop ;

# glue code
AddFilesToPackage $(developDirTokens) lib :
	<src!system!glue!arch!$(arch)>crti.o
	<src!system!glue!arch!$(arch)>crtn.o
	<src!system!glue>init_term_dyn.o
	<src!system!glue>start_dyn.o
	<src!system!glue>haiku_version_glue.o
;

# kernel
AddFilesToPackage $(developDirTokens) lib : kernel.so : _KERNEL_ ;

# additional libraries
local developmentLibs = <revisioned>libroot_debug.so ;
AddFilesToPackage lib : $(developmentLibs) ;

# library symlinks
local lib ;
for lib in $(SYSTEM_LIBS) $(developmentLibs) {
	AddSymlinkToPackage $(developDirTokens) lib : /system/lib $(lib:BS) ;
	local abiVersion = [ on $(lib) return $(HAIKU_LIB_ABI_VERSION) ] ;
	if $(abiVersion) {
		local abiVersionedLib = $(lib:BS).$(abiVersion) ;
		AddSymlinkToPackage $(developDirTokens) lib
			: /system/lib $(abiVersionedLib) ;
	}
}

# static libraries
AddFilesToPackage $(developDirTokens) lib : liblocalestub.a ;

# the POSIX error code mapper library
AddFilesToPackage $(developDirTokens) lib : libposix_error_mapper.a ;

# ABI independent stuff

# scripts: setgcc
local scripts = setgcc ;
SEARCH on $(scripts) = [ FDirName $(HAIKU_TOP) data bin ] ;
AddFilesToPackage bin : $(scripts) ;

# headers
AddHeaderDirectoryToPackage config ;
AddHeaderDirectoryToPackage glibc ;
AddHeaderDirectoryToPackage os ;
AddHeaderDirectoryToPackage posix ;

# private headers
AddHeaderDirectoryToPackage private ;
CopyDirectoryToPackage develop headers private libs compat
	: [ FDirName $(HAIKU_TOP) src libs compat freebsd_network ]
	: : -x *.c -x *.cpp -x *.awk -x Jamfile -x miidevs ;
CopyDirectoryToPackage develop headers private libs compat
	: [ FDirName $(HAIKU_TOP) src libs compat freebsd_wlan ]
	: : -x *.c -x Jamfile ;

# create be -> os symlink for now
AddSymlinkToPackage $(developDirTokens) headers : os : be ;

# BSD and GNU compatibility headers
AddHeaderDirectoryToPackage compatibility bsd : bsd ;
AddHeaderDirectoryToPackage compatibility gnu : gnu ;

# third party libs headers
AddHeaderDirectoryToPackage libs termcap : 3rdparty ;
AddHeaderDirectoryToPackage libs tiff : 3rdparty ;

CopyDirectoryToPackage develop headers : $(HAIKU_JPEG_HEADERS_DEPENDENCY)
	: 3rdparty : : isTarget ;
CopyDirectoryToPackage develop headers : $(HAIKU_LIBPNG_HEADERS_DEPENDENCY)
	: 3rdparty : : isTarget ;

# cpp headers
if $(HAIKU_GCC_VERSION[1]) = 2 {
	# GCC 2 only -- for GCC 4 they come with the DevelopmentBase package
	CopyDirectoryToPackage $(developDirTokens) headers c++
		: [ FDirName $(HAIKU_TOP) headers cpp ] : 2.95.3 ;
}

# OpenGL headers
if $(TARGET_ARCH) = x86 {
	local mesaGlHeaders
		= [ FDirName [ BuildFeatureAttribute mesa : headers : path ] GL ] ;
	local mesaGlHeadersDependency = [ BuildFeatureAttribute mesa : headers ] ;
	mesaGlHeaders = $(mesaGlHeaders:G=$(mesaGlHeadersDependency:G)) ;
	Depends $(mesaGlHeaders) : $(mesaGlHeadersDependency) ;
	CopyDirectoryToPackage $(developDirTokens) headers os opengl
		: $(mesaGlHeaders) : : : isTarget ;
}

BuildHaikuPackage $(haikuDevelPackage) : haiku_devel ;
